/* tslint:disable */
/* eslint-disable */
/**
 * YCloud API
 * The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.
 *
 * The version of the OpenAPI document: v2
 * Contact: service@ycloud.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
// @ts-ignore
import { BASE_PATH, USER_AGENT, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { ErrorResponse } from '../models';
// @ts-ignore
import { WhatsappMediaUpload200Response } from '../models';
/**
 * WhatsappMediaApi - axios parameter creator
 * @export
 */
const WhatsappMediaApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Uploads media that can later be sent in WhatsApp messages. This endpoint interfaces with Meta\'s WhatsApp Business API media endpoints. All media files sent through this endpoint are encrypted and persist for 30 days.  For supported media types and size limitations, please refer to [Supported Media Types](https://developers.facebook.com/docs/whatsapp/cloud-api/reference/media#supported-media-types).  For more information, refer to [Meta\'s WhatsApp Cloud API Media documentation](https://developers.facebook.com/docs/whatsapp/cloud-api/reference/media).  Note that all interactive messages cannot send images, documents, videos, or audio using a Media ID in the header section. These elements must be sent using a link.
         * @summary Upload media
         * @param {string} phoneNumber Phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format to use for the upload.
         * @param {any} file The media file to upload. Only one file is supported. If multiple files are uploaded, only the first file will be processed.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upload: async (phoneNumber: string, file: any, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'phoneNumber' is not null or undefined
            assertParamExists('upload', 'phoneNumber', phoneNumber)
            // verify required parameter 'file' is not null or undefined
            assertParamExists('upload', 'file', file)
            const localVarPath = `/whatsapp/media/{phoneNumber}/upload`
                .replace(`{${"phoneNumber"}}`, encodeURIComponent(String(phoneNumber)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            // const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            if (USER_AGENT) {
                localVarHeaderParameter['User-Agent'] = USER_AGENT;
            }
            const localVarQueryParameter = {} as any;
            const localVarFormParams = new ((configuration && configuration.formDataCtor) || FormData)();

            // authentication api_key required
            await setApiKeyToObject(localVarHeaderParameter, "X-API-Key", configuration)


            if (file !== undefined) { 
                localVarFormParams.append('file', file as any);
            }
    
    
            localVarHeaderParameter['Content-Type'] = 'multipart/form-data';
    
            // setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.params = localVarQueryParameter;
            localVarRequestOptions.data = localVarFormParams;

            return {
                url: localVarPath,
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * WhatsappMediaApi - functional programming interface
 * @export
 */
const WhatsappMediaApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = WhatsappMediaApiAxiosParamCreator(configuration)
    return {
        /**
         * Uploads media that can later be sent in WhatsApp messages. This endpoint interfaces with Meta\'s WhatsApp Business API media endpoints. All media files sent through this endpoint are encrypted and persist for 30 days.  For supported media types and size limitations, please refer to [Supported Media Types](https://developers.facebook.com/docs/whatsapp/cloud-api/reference/media#supported-media-types).  For more information, refer to [Meta\'s WhatsApp Cloud API Media documentation](https://developers.facebook.com/docs/whatsapp/cloud-api/reference/media).  Note that all interactive messages cannot send images, documents, videos, or audio using a Media ID in the header section. These elements must be sent using a link.
         * @summary Upload media
         * @param {string} phoneNumber Phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format to use for the upload.
         * @param {any} file The media file to upload. Only one file is supported. If multiple files are uploaded, only the first file will be processed.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async upload(phoneNumber: string, file: any, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<WhatsappMediaUpload200Response>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.upload(phoneNumber, file, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * WhatsappMediaApi - factory interface
 * @export
 */
const WhatsappMediaApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = WhatsappMediaApiFp(configuration)
    return {
        /**
         * Uploads media that can later be sent in WhatsApp messages. This endpoint interfaces with Meta\'s WhatsApp Business API media endpoints. All media files sent through this endpoint are encrypted and persist for 30 days.  For supported media types and size limitations, please refer to [Supported Media Types](https://developers.facebook.com/docs/whatsapp/cloud-api/reference/media#supported-media-types).  For more information, refer to [Meta\'s WhatsApp Cloud API Media documentation](https://developers.facebook.com/docs/whatsapp/cloud-api/reference/media).  Note that all interactive messages cannot send images, documents, videos, or audio using a Media ID in the header section. These elements must be sent using a link.
         * @summary Upload media
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        upload(phoneNumber: string, file: any, options?: any): AxiosPromise<WhatsappMediaUpload200Response> {
            return localVarFp.upload(phoneNumber, file, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * WhatsappMediaApi - object-oriented interface
 * @export
 * @class WhatsappMediaApi
 * @extends {BaseAPI}
 */
export class WhatsappMediaApi extends BaseAPI {
    /**
     * Uploads media that can later be sent in WhatsApp messages. This endpoint interfaces with Meta\'s WhatsApp Business API media endpoints. All media files sent through this endpoint are encrypted and persist for 30 days.  For supported media types and size limitations, please refer to [Supported Media Types](https://developers.facebook.com/docs/whatsapp/cloud-api/reference/media#supported-media-types).  For more information, refer to [Meta\'s WhatsApp Cloud API Media documentation](https://developers.facebook.com/docs/whatsapp/cloud-api/reference/media).  Note that all interactive messages cannot send images, documents, videos, or audio using a Media ID in the header section. These elements must be sent using a link.
     * @summary Upload media
     * @param {string} phoneNumber Phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format to use for the upload.
     * @param {any} file The media file to upload. Only one file is supported. If multiple files are uploaded, only the first file will be processed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WhatsappMediaApi
     */
    public upload(phoneNumber: string, file: any, options?: AxiosRequestConfig) {
        return WhatsappMediaApiFp(this.configuration).upload(phoneNumber, file, options).then((request) => request(this.axios, this.basePath));
    }
}
